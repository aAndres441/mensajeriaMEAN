'use strict'
import { env } from '.env';
const express = require('express');
const cors = require('cors');
const mongoose = require('mongoose');
const bodyParser = require("body-parser");

const app = express();
app.use(cors());
//app.use(morgan("dev"));
app.use(express.json());

//settings
app.set ('port', process.env. PORT || 3000); //seteamos una variable que inventamos, port, a express para abrir en el puerto del sist operativo o en 3000
const port2 = app.get('port');
//export app;
app.listen(app.get('port'), () => { 
    console.log('Server in ', app.get('port'));
});



const init = async () => {

    const url = 'mongodb://localhost/mensajeria';
    const MONGO_DB = process.env.DATABASE || url;

    try {
        const conection = await mongoose.connect(MONGO_DB, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
            useFindAndModify: false,
            useCreateIndexe: true
        });
        const db = await mongoose.connection;
        db.once('open', () => console.log.bind(`conectado en puerto ${url}`));
    } catch (error) {
        console.log.bind(error, 'ERROR');
        db.on('error', err => console.error.bind(console, 'Ta le erro'));
    }

    
    /* 
    ¡Importante! Si abrió una conexión separada utilizando ´
    mongoose.createConnection()pero intenta acceder al modelo
     a través de mongoose.model('ModelName')él, no funcionará
      como se esperaba, ya que no está conectado a una conexión
       de base de datos activa. En este caso accede a tu modelo
        a través de la conexión que creaste:
     */
        const conn = mongoose.createConnection('your connection string');
}
class Database {

    //const conect = async (req, res) =>{

}


export default Database;